{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAQ,EAAM,aAAa,CAAC,SAElC,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,YAC/B,AAIJ,SAA2B,CAAW,EAoBpC,AAlBmB,AADD,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OACvB,IAAI,CAAC,SAAC,CAAA,CAAM,CAAzC,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,SAAS,CACzC,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,SAAS,OAE/C,AAAI,AAAmC,QAAnC,CAAO,CAAC,EAAY,CAAC,SAAS,CACzB,SAAS,GAAS,SAAS,GAGhC,AAAmC,WAAnC,CAAO,CAAC,EAAY,CAAC,SAAS,CAE9B,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,QAAS,KAI/B,EAAM,aAAa,CAAC,EAC7B,GAEW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAM,WAAW,CAAC,E,EAChD,EAzBsB,EACpB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar tbody = table.querySelector(\"tbody\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortTableByColumn(index);\n    });\n});\nfunction sortTableByColumn(columnIndex) {\n    var rowsArray = Array.from(tbody.querySelectorAll(\"tr\"));\n    var sortedRows = rowsArray.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[columnIndex].innerText;\n        var cellB = rowB.cells[columnIndex].innerText;\n        if (headers[columnIndex].innerText === \"Age\") return parseInt(cellA) - parseInt(cellB);\n        if (headers[columnIndex].innerText === \"Salary\") return parseFloat(cellA.replace(/[$,]/g, \"\")) - parseFloat(cellB.replace(/[$,]/g, \"\"));\n        return cellA.localeCompare(cellB);\n    });\n    sortedRows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n}\n\n//# sourceMappingURL=index.4bf3fe73.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortTableByColumn(index);\n  });\n});\n\nfunction sortTableByColumn(columnIndex) {\n  const rowsArray = Array.from(tbody.querySelectorAll('tr'));\n  const sortedRows = rowsArray.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].innerText;\n    const cellB = rowB.cells[columnIndex].innerText;\n\n    if (headers[columnIndex].innerText === 'Age') {\n      return parseInt(cellA) - parseInt(cellB);\n    }\n\n    if (headers[columnIndex].innerText === 'Salary') {\n      return (\n        parseFloat(cellA.replace(/[$,]/g, '')) -\n        parseFloat(cellB.replace(/[$,]/g, ''))\n      );\n    }\n\n    return cellA.localeCompare(cellB);\n  });\n\n  sortedRows.forEach((row) => tbody.appendChild(row));\n}\n"],"names":["table","document","querySelector","headers","querySelectorAll","tbody","forEach","header","index","addEventListener","sortTableByColumn","columnIndex","sortedRows","rowsArray","Array","from","sort","rowA","rowB","cellA","cells","innerText","cellB","parseInt","parseFloat","replace","localeCompare","row","appendChild"],"version":3,"file":"index.4bf3fe73.js.map"}